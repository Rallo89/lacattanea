{"ast":null,"code":"var _jsxFileName = \"/Users/nicolotorreggiani/Documents/GitHub/lacattanea/src/components/Poll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Poll.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Poll() {\n  _s();\n\n  const [voteData, setVoteData] = useState();\n  const [totalVotes, setTotalVotes] = useState(0);\n  const [voted, setVoted] = useState(false);\n  const url = \"https://328r96to88.execute-api.eu-central-1.amazonaws.com/production\";\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => {\n      setVoteData(data);\n      let sum = 0;\n      data.forEach(function (obj) {\n        sum += obj.votes;\n      });\n      setTotalVotes(sum);\n    });\n  }, []);\n\n  const submitVote = e => {\n    if (voted === false) {\n      const voteSelected = e.target.dataset.id;\n      const voteCurrent = voteData[voteSelected].votes;\n      voteData[voteSelected].votes = voteCurrent + 1;\n      setTotalVotes(totalVotes + 1);\n      setVoted(!voted);\n      const options = {\n        method: \"POST\",\n        body: JSON.stringify(voteData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(url, options).then(res => res.json()).then(res => console.log(res));\n    }\n  };\n\n  let pollOptions;\n\n  if (voteData) {\n    pollOptions = voteData.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitVote,\n          \"data-id\": item.id,\n          children: [item.option, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"- \", item.votes, \" Votes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Which option do you like the best?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: voted ? \"results\" : \"options\",\n      children: pollOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Votes: \", totalVotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Poll, \"TtS2UO4u3AczXvOfm8ri07NgsCU=\");\n\n_c = Poll;\nexport default Poll;\n\nvar _c;\n\n$RefreshReg$(_c, \"Poll\");","map":{"version":3,"sources":["/Users/nicolotorreggiani/Documents/GitHub/lacattanea/src/components/Poll.js"],"names":["React","useState","useEffect","Poll","voteData","setVoteData","totalVotes","setTotalVotes","voted","setVoted","url","fetch","then","response","json","data","sum","forEach","obj","votes","submitVote","e","voteSelected","target","dataset","id","voteCurrent","options","method","body","JSON","stringify","headers","res","console","log","pollOptions","map","item","option"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Poll.css\";\n\nfunction Poll(){\n    const [voteData, setVoteData] = useState();\n    const [totalVotes, setTotalVotes] = useState(0);\n    const [voted, setVoted] = useState(false);\n\n    const url = \"https://328r96to88.execute-api.eu-central-1.amazonaws.com/production\";\n    useEffect(() => {\n        fetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n            setVoteData(data);\n            let sum = 0;\n            data.forEach(function (obj){\n                sum += obj.votes;\n            });\n            setTotalVotes(sum);\n        });\n    }, []);\n\n    const submitVote = (e) => {\n        if(voted === false){\n            const voteSelected = e.target.dataset.id;\n            const voteCurrent = voteData[voteSelected].votes;\n            voteData[voteSelected].votes = voteCurrent + 1;\n            setTotalVotes(totalVotes + 1);\n            setVoted(!voted);\n            const options = {\n                method: \"POST\",\n                body: JSON.stringify(voteData),\n                headers: { \"Content-Type\": \"application/json\"},\n            };\n            fetch(url, options)\n                .then((res) => res.json())\n                .then((res) => console.log(res));\n        }\n    };\n\n    let pollOptions;\n    if (voteData) {\n        pollOptions = voteData.map((item) => {\n            return (\n                <li key={item.id}>\n                    <button onClick={submitVote} data-id={item.id}>\n                    {item.option}\n                    <span>- {item.votes} Votes</span>\n                    </button>          \n                </li>\n            );\n        });\n    }\n\n    return (\n        <div className=\"poll\">\n          <h1>Which option do you like the best?</h1>\n          <ul className={voted ? \"results\" : \"options\"}>\n            {pollOptions}\n          </ul>\n          <p>Total Votes: {totalVotes}</p>\n        </div>\n      );\n\n}\nexport default Poll;"]},"metadata":{},"sourceType":"module"}