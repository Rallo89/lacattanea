{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicolo.torreggiani\\\\Documents\\\\GitHub\\\\lacattanea\\\\src\\\\Components\\\\Poll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Alert, Accordion, Button, ProgressBar } from 'react-bootstrap';\nimport { useAuth } from '../context/AuthContext';\nimport \"./Poll.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Poll({\n  pollId\n}) {\n  _s();\n\n  /**\r\n   * DEFINIZIONE VARIABILI\r\n   */\n  const {\n    currentUser\n  } = useAuth();\n  const [data, setData] = useState();\n  const [voteData, setVoteData] = useState();\n  const [users, setUsers] = useState([]);\n  const [totalVotes, setTotalVotes] = useState(0);\n  const poll = pollId;\n  const url = \"http://localhost:5001/pollItem?pollId=\" + poll;\n  /**\r\n   * Gestione invio voto\r\n   * @param {*} e \r\n   * @returns \r\n   */\n\n  const submitVote = e => {\n    //Se non hai ancora votato        \n    if (!users.includes(currentUser.email)) {\n      const voteSelected = e.currentTarget.dataset.id;\n      const voteCurrent = voteData[voteSelected].voted;\n      voteData[voteSelected].voted = voteCurrent + 1;\n      setTotalVotes(totalVotes + 1);\n      users.push(currentUser.email);\n      data[\"Item\"][\"options\"] = voteData;\n      data[\"Item\"][\"usersPoll\"] = users;\n      const options = {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(url, options).then(res => console.log(res));\n    } //Se hai giÃ  votato\n    else {\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: \"Errore\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hai gi\\xE0 votato per questo sondaggio!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this);\n      }\n  }; //Recupero dati singola survey\n\n\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => {\n      setVoteData(data[\"Item\"][\"options\"]);\n      setUsers(data[\"Item\"][\"usersPoll\"]);\n      setData(data);\n      let sum = 0;\n      data[\"Item\"][\"options\"].forEach(function (obj) {\n        sum += obj.voted;\n      });\n      setTotalVotes(sum);\n    });\n  }, []);\n\n  if (users.includes(currentUser.email)) {\n    let pollProgressbar = voteData.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n          variant: \"success\",\n          now: Number.parseFloat(item.voted * 100 / totalVotes).toFixed(2),\n          label: item.value + ' - ' + Number.parseFloat(item.voted * 100 / totalVotes).toFixed(2) + '%'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Accordion, {\n      children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n        eventKey: data[\"Item\"][\"pollID\"],\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n          children: data[\"Item\"][\"pollID\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Risultati - \", data[\"Item\"][\"title\"]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"options\",\n              children: pollProgressbar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Total Votes: \", totalVotes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  } else {\n    let pollOptions = voteData.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: submitVote,\n          \"data-id\": item.id,\n          children: item.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)\n      }, item.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poll\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: data[\"Items\"][\"title\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"options\",\n        children: pollOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Votes: \", totalVotes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Poll, \"LpBCWK4uoY2d2jcGwY5uxhkZKLw=\", false, function () {\n  return [useAuth];\n});\n\n_c = Poll;\nexport default Poll;\n\nvar _c;\n\n$RefreshReg$(_c, \"Poll\");","map":{"version":3,"sources":["C:/Users/nicolo.torreggiani/Documents/GitHub/lacattanea/src/Components/Poll.js"],"names":["React","useState","useEffect","Alert","Accordion","Button","ProgressBar","useAuth","Poll","pollId","currentUser","data","setData","voteData","setVoteData","users","setUsers","totalVotes","setTotalVotes","poll","url","submitVote","e","includes","email","voteSelected","currentTarget","dataset","id","voteCurrent","voted","push","options","method","body","JSON","stringify","headers","fetch","then","res","console","log","response","json","sum","forEach","obj","pollProgressbar","map","item","Number","parseFloat","toFixed","value","pollOptions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Alert, Accordion, Button, ProgressBar } from 'react-bootstrap'\r\nimport { useAuth } from '../context/AuthContext'\r\nimport \"./Poll.css\";\r\n\r\nfunction Poll({pollId}){\r\n\r\n    /**\r\n     * DEFINIZIONE VARIABILI\r\n     */\r\n    const {currentUser} = useAuth();\r\n    const [data, setData] = useState();\r\n    const [voteData, setVoteData] = useState();\r\n    const [users, setUsers] = useState([]);\r\n    const [totalVotes, setTotalVotes] = useState(0);\r\n    const poll = pollId;\r\n    const url = \"http://localhost:5001/pollItem?pollId=\"+poll;\r\n    \r\n    /**\r\n     * Gestione invio voto\r\n     * @param {*} e \r\n     * @returns \r\n     */\r\n    const submitVote = (e) => {\r\n        //Se non hai ancora votato        \r\n        if(!users.includes(currentUser.email)){\r\n            const voteSelected = e.currentTarget.dataset.id;\r\n            const voteCurrent = voteData[voteSelected].voted;\r\n            voteData[voteSelected].voted = voteCurrent + 1;\r\n            setTotalVotes(totalVotes + 1);\r\n            users.push(currentUser.email);\r\n            data[\"Item\"][\"options\"] = voteData;\r\n            data[\"Item\"][\"usersPoll\"] = users;\r\n            const options = {\r\n                method: \"POST\",\r\n                body: JSON.stringify(data),\r\n                headers: { \"Content-Type\": \"application/json\"},\r\n            };\r\n            fetch(url, options)\r\n                .then((res) => console.log(res));\r\n        } \r\n        //Se hai giÃ  votato\r\n        else {\r\n            return (\r\n                <Alert variant=\"danger\">\r\n                    <Alert.Heading>Errore</Alert.Heading>\r\n                    <p>\r\n                        Hai giÃ  votato per questo sondaggio!\r\n                    </p>\r\n                </Alert>\r\n            );\r\n        }\r\n    };\r\n\r\n    //Recupero dati singola survey\r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            setVoteData(data[\"Item\"][\"options\"]);\r\n            setUsers(data[\"Item\"][\"usersPoll\"]);\r\n            setData(data);\r\n            let sum = 0;\r\n            data[\"Item\"][\"options\"].forEach(function (obj){\r\n                sum += obj.voted;\r\n            });\r\n            setTotalVotes(sum);\r\n        });\r\n    }, []);\r\n\r\n    if(users.includes(currentUser.email)){\r\n        let pollProgressbar = voteData.map((item) => {\r\n            return (\r\n                <li>\r\n                    <ProgressBar variant=\"success\" now={Number.parseFloat((item.voted*100/totalVotes)).toFixed(2)} label={item.value + ' - ' + Number.parseFloat((item.voted*100/totalVotes)).toFixed(2) + '%'}/>\r\n                </li>\r\n            );\r\n        });\r\n        return (\r\n            <Accordion>\r\n                <Accordion.Item eventKey={data[\"Item\"][\"pollID\"]}>\r\n                    <Accordion.Header>{data[\"Item\"][\"pollID\"]}</Accordion.Header>\r\n                    <Accordion.Body>\r\n                        <div className=\"poll\">\r\n                        <h1>Risultati - {data[\"Item\"][\"title\"]}</h1>\r\n                        <ul className={\"options\"}>\r\n                            {pollProgressbar}\r\n                        </ul>\r\n                        <p>Total Votes: {totalVotes}</p>\r\n                        </div>\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n            </Accordion>\r\n          );\r\n    } else {\r\n        let pollOptions = voteData.map((item) => {\r\n                return (\r\n                    <li key={item.value}>\r\n                        <Button variant=\"dark\" onClick={submitVote} data-id={item.id}>{item.value}</Button>\r\n                    </li>\r\n                );\r\n        });\r\n        return (\r\n            <div className=\"poll\">\r\n              <h1>{data[\"Items\"][\"title\"]}</h1>\r\n              <ul className={\"options\"}>\r\n                {pollOptions}\r\n              </ul>\r\n              <p>Total Votes: {totalVotes}</p>\r\n            </div>\r\n          );\r\n    }\r\n\r\n}\r\nexport default Poll;"]},"metadata":{},"sourceType":"module"}