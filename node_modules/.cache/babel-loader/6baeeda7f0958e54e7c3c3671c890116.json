{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicolo.torreggiani\\\\Documents\\\\GitHub\\\\lacattanea\\\\src\\\\Components\\\\Poll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Poll.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Poll() {\n  _s();\n\n  const [voteData, setVoteData] = useState();\n  const [totalVotes, setTotalVotes] = useState(0);\n  const [voted, setVoted] = useState(false);\n  const url = \"http://localhost:5001/pollItem?pollId=SITO_CATTANEA\";\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => {\n      setVoteData(data);\n      let sum = 0;\n      data.forEach(function (obj) {\n        sum += obj.voted;\n      });\n      setTotalVotes(sum);\n    });\n  }, []);\n  console.log(totalVotes);\n\n  const submitVote = e => {\n    console.log('event.currentTarget.dataset.id', event.currentTarget.dataset.id);\n\n    if (voted === false) {\n      console.log(e);\n      const voteSelected = e.target.dataset.id;\n      console.log(e.target.dataset.id);\n      console.log(voteData);\n      const voteCurrent = voteData[voteSelected].voted;\n      voteData[voteSelected].voted = voteCurrent + 1;\n      setTotalVotes(totalVotes + 1);\n      setVoted(!voted);\n      const options = {\n        method: \"POST\",\n        body: JSON.stringify(voteData),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(url, options).then(res => res.json()).then(res => console.log(res));\n    }\n  };\n\n  let pollOptions;\n\n  if (voteData) {\n    pollOptions = voteData.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitVote,\n          \"data-id\": item.id,\n          children: [item.value, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"- \", item.voted, \" Votes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, item.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poll\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Which option do you like the best?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: voted ? \"results\" : \"options\",\n      children: pollOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Votes: \", totalVotes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Poll, \"TtS2UO4u3AczXvOfm8ri07NgsCU=\");\n\n_c = Poll;\nexport default Poll;\n\nvar _c;\n\n$RefreshReg$(_c, \"Poll\");","map":{"version":3,"sources":["C:/Users/nicolo.torreggiani/Documents/GitHub/lacattanea/src/Components/Poll.js"],"names":["React","useState","useEffect","Poll","voteData","setVoteData","totalVotes","setTotalVotes","voted","setVoted","url","fetch","then","response","json","data","sum","forEach","obj","console","log","submitVote","e","event","currentTarget","dataset","id","voteSelected","target","voteCurrent","options","method","body","JSON","stringify","headers","res","pollOptions","map","item","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Poll.css\";\r\n\r\nfunction Poll(){\r\n    const [voteData, setVoteData] = useState();\r\n    const [totalVotes, setTotalVotes] = useState(0);\r\n    const [voted, setVoted] = useState(false);\r\n\r\n    const url = \"http://localhost:5001/pollItem?pollId=SITO_CATTANEA\";\r\n    \r\n    useEffect(() => {\r\n        fetch(url)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            setVoteData(data);\r\n            let sum = 0;\r\n            data.forEach(function (obj){\r\n                sum += obj.voted;\r\n            });\r\n            setTotalVotes(sum);\r\n        });\r\n    }, []);\r\n\r\n    console.log(totalVotes);\r\n\r\n    const submitVote = (e) => {\r\n        console.log('event.currentTarget.dataset.id', event.currentTarget.dataset.id);\r\n        if(voted === false){\r\n            console.log(e);\r\n            const voteSelected = e.target.dataset.id;\r\n            console.log(e.target.dataset.id);\r\n            console.log(voteData);\r\n            const voteCurrent = voteData[voteSelected].voted;\r\n            voteData[voteSelected].voted = voteCurrent + 1;\r\n            setTotalVotes(totalVotes + 1);\r\n            setVoted(!voted);\r\n            const options = {\r\n                method: \"POST\",\r\n                body: JSON.stringify(voteData),\r\n                headers: { \"Content-Type\": \"application/json\"},\r\n            };\r\n            fetch(url, options)\r\n                .then((res) => res.json())\r\n                .then((res) => console.log(res));\r\n        }\r\n    };\r\n\r\n    let pollOptions;\r\n\r\n    if (voteData) {\r\n        pollOptions = voteData.map((item) => {\r\n            return (\r\n                <li key={item.value}>\r\n                    <button onClick={submitVote} data-id={item.id}>\r\n                    {item.value}\r\n                    <span>- {item.voted} Votes</span>\r\n                    </button>          \r\n                </li>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"poll\">\r\n          <h1>Which option do you like the best?</h1>\r\n          <ul className={voted ? \"results\" : \"options\"}>\r\n            {pollOptions}\r\n          </ul>\r\n          <p>Total Votes: {totalVotes}</p>\r\n        </div>\r\n      );\r\n\r\n}\r\nexport default Poll;"]},"metadata":{},"sourceType":"module"}